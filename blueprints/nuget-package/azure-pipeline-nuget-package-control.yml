parameters:
- name:     isDotNetCore
  type:     boolean
- name:     netCoreVersion
  type:     string
  default:  ''
- name:     portfolioName
  type:     string
- name:     productName
  type:     string
- name:     applicationBlueprint
  type:     string
  default:  'nuget-package'
- name:     projectPath
  type:     string
- name:     projectFile
  type:     string
- name:     nuspecFile
  type:     string
- name:     platform
  type:     string
  default:  'AnyCPU'
- name:     modeElite
  type:     boolean
  default:  false
# Bootstrap optionals
- name:     verbose
  type:     boolean
  default:  false
# CI Blueprint optionals
- name:     versionSpec
  type:     string
  default:  '5.11.x' # switch from 5.6.3 to 5.11.x as default
- name:     useDefaultConfig
  type:     boolean
  default:  false
- name:     usePortfolioConfig
  type:     boolean
  default:  false
- name:     runAzurite
  type:     boolean
  default:  false
# CD Blueprint optionals
- name:     suppressCD
  type:     boolean
  default:  false
# Path of pre-build powershell script
- name:     prebuildPsScript  
  type:     string
  default:  ''
# nodeJs version for the build
- name:     nodeToolVersion
  type:     string
  default:  ''

# VARIABLES
variables:
- ${{ if and( eq(parameters.suppressCD, false), eq(parameters.useDefaultConfig, true) ) }}:
  - template: /deploy/default.config/nuget-package-config.yml@CeConfiguration

- ${{ if and( eq(parameters.suppressCD, false), eq(parameters.useDefaultConfig, false), eq(parameters.usePortfolioConfig, true) ) }}:
  - template: /deploy/${{ lower(parameters.portfolioName) }}/nuget-package-config.yml@CeConfiguration

- ${{ if and( eq(parameters.suppressCD, false), eq(parameters.useDefaultConfig, false), eq(parameters.usePortfolioConfig, false) ) }}:
  - template: /deploy/${{ lower(parameters.portfolioName) }}.${{ lower(parameters.productName) }}-config.yml@self

stages:

# --------------------------------------------------------------------------
# START OF PIPELINE
# --------------------------------------------------------------------------
- template: /blueprints/nuget-package/azure-pipeline-nuget-package-ci.yml@CeBlueprints
  parameters:
    isDotNetCore:           ${{parameters.isDotNetCore}}
    netCoreVersion:         ${{parameters.netCoreVersion}}
    portfolioName:          ${{parameters.portfolioName}}
    productName:            ${{parameters.productName}}
    applicationBlueprint:   ${{parameters.applicationBlueprint}}
    projectPath:            ${{parameters.projectPath}}
    projectFile:            ${{parameters.projectFile}}
    nuspecFile:             ${{parameters.nuspecFile}}
    platform:               ${{parameters.platform}}
    modeElite:              ${{parameters.modeElite}}
    verbose:                ${{parameters.verbose}}
    suppressCD:             ${{parameters.suppressCD}}
    versionSpec:            ${{parameters.versionSpec}}
    runAzurite:             ${{parameters.runAzurite}}
    prebuildPsScript:       ${{parameters.prebuildPsScript}}
    nodeToolVersion:        ${{parameters.nodeToolVersion}}

# --------------------------------------------------------------------------
# DEPLOYMENT
# 2021.10.04 WS Suppress CD on "merge" so that we can use PR validation builds
# --------------------------------------------------------------------------
- ${{ if and(eq(parameters.suppressCD, false), ne(lower(variables['Build.SourceBranchName']), 'merge')) }}:
  - template: /blueprints/nuget-package/azure-pipeline-nuget-package-cd.yml@CeBlueprints
    parameters:
      stage:
        development:
          config:
            active:                       ${{variables.developmentStageActive}}
            nameEnv:                      ${{variables.developmentStageEnvName}}
            nameVM:                       ${{variables.developmentStageVmImage}}
            targetFeed:                   ${{variables.developmentTargetFeed}}
          applicationBlueprint:           ${{parameters.applicationBlueprint}}
          modeElite:                      ${{parameters.modeElite}}
        systemTest:
          config:                       
            active:                       ${{variables.systemTestStageActive}}
            nameEnv:                      ${{variables.systemTestStageEnvName}}
            nameVM:                       ${{variables.systemTestStageVmImage}}
            targetFeed:                   ${{variables.systemTestTargetFeed}}
          applicationBlueprint:           ${{parameters.applicationBlueprint}}
          modeElite:                      ${{parameters.modeElite}}
        staging:
          config:                       
            active:                       ${{variables.stagingStageActive}}
            nameEnv:                      ${{variables.stagingStageEnvName}}
            nameVM:                       ${{variables.stagingStageVmImage}}
            targetFeed:                   ${{variables.stagingTargetFeed}}
          applicationBlueprint:           ${{parameters.applicationBlueprint}}
          modeElite:                      ${{parameters.modeElite}}
        production:
          config:                       
            active:                       ${{variables.productionStageActive}}
            nameEnv:                      ${{variables.productionStageEnvName}}
            nameVM:                       ${{variables.productionStageVmImage}}
            targetFeed:                   ${{variables.productionTargetFeed}}
          applicationBlueprint:           ${{parameters.applicationBlueprint}}
          modeElite:                      ${{parameters.modeElite}}
        securityReview:
          envName:                        ${{variables.securityReviewStageEnvName}}
          applicationBlueprint:           ${{parameters.applicationBlueprint}}
          modeElite:                      ${{parameters.modeElite}}
        securityAutomation:
          applicationBlueprint:           ${{parameters.applicationBlueprint}}
          modeElite:                      ${{parameters.modeElite}}
        qaScans:
          applicationBlueprint:           ${{parameters.applicationBlueprint}}
          modeElite:                      ${{parameters.modeElite}}
        preProdAutomation:
          applicationBlueprint:           ${{parameters.applicationBlueprint}}
          modeElite:                      ${{parameters.modeElite}}

# --------------------------------------------------------------------------
# END OF PIPELINE
# --------------------------------------------------------------------------