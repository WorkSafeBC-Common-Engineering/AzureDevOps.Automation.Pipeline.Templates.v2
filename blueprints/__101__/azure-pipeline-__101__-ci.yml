parameters:
- name:     blueprintVersion
  type:     string
- name:     portfolioName
  type:     string
- name:     productName
  type:     string
- name:     applicationBlueprint
  type:     string
# Bootstrap optionals
- name:     verbose
  type:     boolean
  default:  false
# CI Blueprint optionals
- name:     versionSpec
  type:     string
# CD Blueprint optionals
- name:     modeElite
  type:     boolean
  default:  false

# --------------------------------------------------------------------------
# START OF BUILD and TEST STAGE
# --------------------------------------------------------------------------
stages:
- stage: ContinuousIntegration
  displayName: Continuous Integration (CI)

  # Configure the default agent pool and image to use for the pipeline
  pool:
    name:     'Azure Pipelines'
    vmImage:  'Windows-latest'
  
  jobs:
  - job: ContinuousIntegration
    steps:
    - checkout: self
      fetchDepth: 0
    - template: /templates/utilities/git-tools-git-version.yml@CeBlueprints
      parameters:
        portfolioName:    ${{parameters.portfolioName}}
        productName:      ${{parameters.productName}}
        versionSpec:      ${{parameters.versionSpec}}

# ==========================================================================
# BOOTSTRAP VALIDATION
# ==========================================================================
    - template: /templates/boot-strap.yml@CeBlueprints
      parameters:
        blueprintVersion:     ${{parameters.blueprintVersion}}
        bootstrapMode:        'init'
        applicationType:      'other' #TODO specify dotnet or other
        applicationBlueprint: ${{parameters.applicationBlueprint}}
        portfolioName:        ${{parameters.portfolioName}}
        productName:          ${{parameters.productName}}
        sourcesDirectory:     $(Build.SourcesDirectory)
        verbose:              ${{parameters.verbose}}
        modeElite:            ${{parameters.modeElite}}
# ==========================================================================

# --------------------------------------------------------------------------
# CONTINUOUS INTEGRATION BUILD
# --------------------------------------------------------------------------
# TODO Add your build steps here

# --------------------------------------------------------------------------
# CONTINUOUS INTEGRATION: TEST
# -- All the test projects should be placed inside 
#    the respective folders e.g. src/Tests/UnitTests etc.
# --------------------------------------------------------------------------
# Use the template to run the tests e.g.
#   - template: templates/qa/tests/tests-ci-all.yml@CeBlueprints
#     parameters:
#       isDotNetCore: true  # true for .net core, false for .net framework
#
# OR 
#
# Write your own tests and follow the steps for test results in the template
#  templates/qa/tests/tests-ci-all.yml to ensure they are validated
#
# Sample test steps below, please adjust as needed
# - ${{ if eq(parameters.isDotNetCore, true) }}:
#   - task: DotNetCoreCLI@2
#     displayName: 'Run Unit Tests'
#     inputs:
#       command:    'test'
#       projects:   '**/Tests/UnitTests/**/*.??proj'
#       arguments:  '--no-build --no-restore --configuration $(buildConfiguration) '
#       publishTestResults: true
#     #continueOnError: true    # uncomment this line to continue on error
# - ${{ else }}:
#   - task: VSTest@3
#     displayName: 'Run unit tests with minimum required tests'
#     inputs:
#       testSelector: 'testAssemblies'
#       testAssemblyVer2: '**\Tests\UnitTests\**\bin\**\*.dll'
#       searchFolder: '$(System.DefaultWorkingDirectory)'
#       resultsFolder: '$(Agent.TempDirectory)\TestResults'
#       failOnMinTestsNotRun: true
#       #codeCoverageEnabled: true
#       minimumExpectedTests: 1
#     #continueOnError: true   # uncomment this line to continue on error 


# --------------------------------------------------------------------------
# PUBLISH
# --------------------------------------------------------------------------
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish:  '$(Build.ArtifactStagingDirectory)'
        ArtifactName:   'drop'

# ==========================================================================
# BOOTSTRAP VALIDATION
# ==========================================================================
    - template: /templates/boot-strap.yml@CeBlueprints
      parameters:
        blueprintVersion:     ${{parameters.blueprintVersion}}
        bootstrapMode:        'run'
        applicationType:      'other' #TODO specify dotnet or other
        applicationBlueprint: ${{parameters.applicationBlueprint}}
        portfolioName:        ${{parameters.portfolioName}}
        productName:          ${{parameters.productName}}
        sourcesDirectory:     $(Build.SourcesDirectory)
        verbose:              ${{parameters.verbose}}
        modeElite:            ${{parameters.modeElite}}
# ==========================================================================
      
# --------------------------------------------------------------------------
# END BUILD AND TEST STAGE
# --------------------------------------------------------------------------

    - ${{ if eq(lower(variables['Build.SourceBranchName']), 'merge') }}:
      - script: echo CD part of the pipeline is suppressed for pull request validation builds! 
        displayName: PR Validation CD Suppression Alert